{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","_ref","user","_jsx","className","href","concat","email","children","name","CommentInfo","comment","_jsxs","_Fragment","body","CommentList","comments","map","id","PostInfo","todo","title","length","PostList","todos","postsFromServer","_objectSpread","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"6z8IAEaA,EAAW,SAAHC,GAAA,IAAMC,EAAID,EAAJC,KAAI,OAC7BC,cAAA,KAAGC,UAAU,WAAWC,KAAI,UAAAC,OAAYJ,EAAKK,OAAQC,SAClDN,EAAKO,MACJ,ECLOC,G,MAAc,SAAHT,GAAA,IAAMU,EAAOV,EAAPU,QAAO,OACnCC,eAAAC,WAAA,CAAAL,SAAA,CACEI,eAAA,KAAAJ,SAAA,CACGG,EAAQF,KACTN,cAAAU,WAAA,CAAAL,SAAE,OAAK,KAEPL,cAAAU,WAAA,CAAAL,SAAE,OACFL,cAAA,KAAGE,KAAI,UAAAC,OAAYK,EAAQJ,OAAQC,SAAEG,EAAQJ,WAE/CJ,cAAA,SACAA,cAAA,KAAAK,SAAIG,EAAQG,SACX,GCRQC,EAAc,SAAHd,GAAA,IAAMe,EAAQf,EAARe,SAAQ,OACpCb,cAAAU,WAAA,CAAAL,SACGQ,EAASC,KAAI,SAAAN,GAAO,OACnBR,cAACO,EAAW,CAAkBC,QAASA,GAArBA,EAAQO,GAAwB,KAEnD,ECJQC,G,MAAW,SAAHlB,GAAA,IAAMmB,EAAInB,EAAJmB,KAAI,OAC7BjB,cAAAU,WAAA,CAAAL,SACEI,eAAA,OAAKR,UAAU,WAAUI,SAAA,CACvBI,eAAA,OAAKR,UAAU,mBAAkBI,SAAA,CAC/BL,cAAA,MAAIC,UAAU,kBAAiBI,SAAEY,EAAKC,QAEtCT,eAAA,KAAAJ,SAAA,CACG,eAEDL,cAACH,EAAQ,CAACE,KAAMkB,EAAKlB,aAIzBC,cAAA,KAAGC,UAAU,iBAAgBI,SAC1BY,EAAKN,OAGRX,cAAA,SAEAA,cAAA,KAAG,UAAQ,oBAAmBK,SAE3BY,EAAKJ,SAASM,OAAS,EACtBnB,cAACY,EAAW,CAACC,SAAUI,EAAKJ,WAE5Bb,cAAA,KAAAK,SAAG,0BAIR,GC9BQe,EAAW,SAAHtB,GAAA,IAAMuB,EAAKvB,EAALuB,MAAK,OAC9BrB,cAAA,OAAKC,UAAU,WAAUI,SACtBgB,EAAMP,KAAI,SAAAG,GAAI,OACbjB,cAACgB,EAAQ,CAAeC,KAAMA,GAAfA,EAAKF,GAAkB,KAEpC,E,qBCUR,IAAMM,EAAQC,EAAgBR,KAAI,SAAAG,GAAI,OAAAM,wBAAA,GACjCN,GAAI,IACPlB,MAZmByB,EAYDP,EAAKO,OAXhBC,EAAgBC,MAAK,SAAA3B,GAAI,OAAIA,EAAKgB,KAAOS,CAAM,KAC/C,MAWPX,UARuBc,EAQGV,EAAKF,GAPxBa,EAAmBC,QAAO,SAAArB,GAAO,OAAIA,EAAQmB,SAAWA,CAAM,KAC9D,MAFT,IAAyBA,EALJH,CAae,IAGvBM,EAAM,WAAH,OACdrB,eAAA,WAASR,UAAU,MAAKI,SAAA,CACtBL,cAAA,MAAIC,UAAU,aAAYI,SAAC,yBAE3BL,cAACoB,EAAQ,CACPC,MAAOA,MAED,EC1BZU,IAASC,OACPhC,cAAC8B,EAAG,IACJG,SAASC,eAAe,Q","file":"static/js/main.adc5de31.chunk.js","sourcesContent":["import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","export const CommentInfo = ({ comment }) => (\n  <>\n    <p>\n      {comment.name}\n      <>  </>\n      by\n      <>  </>\n      <a href={`mailto:${comment.email}`}>{comment.email}</a>\n    </p>\n    <br />\n    <p>{comment.body}</p>\n  </>\n);\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo/CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <>\n    {comments.map(comment => (\n      <CommentInfo key={comment.id} comment={comment} />\n    ))}\n  </>\n\n);\n","import { UserInfo } from '../UserInfo/UserInfo';\nimport { CommentList } from '../CommentList';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ todo }) => (\n  <>\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">{todo.title}</h3>\n\n        <p>\n          {' Posted by  '}\n\n          <UserInfo user={todo.user} />\n        </p>\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {todo.body}\n      </p>\n\n      <hr />\n\n      <b data-cy=\"NoCommentsMessage\">\n\n        {todo.comments.length > 0 ? (\n          <CommentList comments={todo.comments} />\n        ) : (\n          <p>No commnets yet</p>\n        )}\n      </b>\n    </div>\n  </>\n);\n","import { PostInfo } from '../PostInfo/PostInfo';\n\nexport const PostList = ({ todos }) => (\n  <div className=\"PostList\">\n    {todos.map(todo => (\n      <PostInfo key={todo.id} todo={todo} />\n    ))}\n  </div>\n);\n","import './App.scss';\nimport { PostList } from './components/PostList/PostList';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n\nfunction getCommentsById(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId)\n      || [];\n}\n\nconst todos = postsFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n  comments: getCommentsById(todo.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList\n      todos={todos}\n    />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}