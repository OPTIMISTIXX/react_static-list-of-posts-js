{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","_ref","user","_jsx","className","href","concat","email","children","name","CommentInfo","comment","_jsxs","body","CommentList","comments","map","id","PostInfo","todo","title","length","PostList","todos","postsFromServer","_objectSpread","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"+08IAEaA,EAAW,SAAHC,GAAA,IAAMC,EAAID,EAAJC,KAAI,OAC7BC,cAAA,KAAGC,UAAU,WAAWC,KAAI,UAAAC,OAAYJ,EAAKK,OAAQC,SAClDN,EAAKO,MACJ,ECHOC,G,YAAc,SAAHT,GAAA,IAAMU,EAAOV,EAAPU,QAAO,OAEnCC,eAAA,OAAKR,UAAU,cAAaI,SAAA,CAC1BI,eAAA,OAAKR,UAAU,qBAAoBI,SAAA,CACjCL,cAAA,UAAQC,UAAU,oBAAmBI,SAAEG,EAAQF,OAE9C,OAEDN,cAAA,KACEC,UAAU,qBACVC,KAAI,UAAAC,OAAYK,EAAQJ,OAAQC,SAE/BG,EAAQJ,WAIbJ,cAAA,OAAKC,UAAU,oBAAmBI,SAChCL,cAAA,MAAAK,SAAKG,EAAQE,WAEX,GClBKC,EAAc,SAAHb,GAAA,IAAMc,EAAQd,EAARc,SAAQ,OACpCZ,cAAA,MAAIC,UAAU,cAAaI,SACzBL,cAAA,MAAAK,SACGO,EAASC,KAAI,SAAAL,GAAO,OACnBR,cAACO,EAAW,CAAkBC,QAASA,GAArBA,EAAQM,GAAwB,OAGnD,ECNMC,G,MAAW,SAAHjB,GAAA,IAAMkB,EAAIlB,EAAJkB,KAAI,OAC7BP,eAAA,OAAKR,UAAU,WAAUI,SAAA,CACvBI,eAAA,OAAKR,UAAU,mBAAkBI,SAAA,CAC/BL,cAAA,MAAIC,UAAU,kBAAiBI,SAAEW,EAAKC,QAEtCR,eAAA,QAAAJ,SAAA,CACG,eAEDL,cAACH,EAAQ,CAACE,KAAMiB,EAAKjB,aAIzBC,cAAA,KAAGC,UAAU,iBAAgBI,SAC1BW,EAAKN,OAGRV,cAAA,SAEAA,cAAA,KAAG,UAAQ,oBAAmBK,SAE3BW,EAAKJ,SAASM,OAAS,EACtBlB,cAACW,EAAW,CAACC,SAAUI,EAAKJ,WAE5BZ,cAAA,KAAAK,SAAG,wBAGH,GC5BKc,EAAW,SAAHrB,GAAA,IAAMsB,EAAKtB,EAALsB,MAAK,OAC9BpB,cAAA,OAAKC,UAAU,WAAUI,SACtBe,EAAMP,KAAI,SAAAG,GAAI,OACbhB,cAACe,EAAQ,CAAeC,KAAMA,GAAfA,EAAKF,GAAkB,KAEpC,E,qBCUR,IAAMM,EAAQC,EAAgBR,KAAI,SAAAG,GAAI,OAAAM,wBAAA,GACjCN,GAAI,IACPjB,MAZmBwB,EAYDP,EAAKO,OAXhBC,EAAgBC,MAAK,SAAA1B,GAAI,OAAIA,EAAKe,KAAOS,CAAM,KAC/C,MAWPX,UARuBc,EAQGV,EAAKF,GAPxBa,EAAmBC,QAAO,SAAApB,GAAO,OAAIA,EAAQkB,SAAWA,CAAM,KAC9D,MAFT,IAAyBA,EALJH,CAae,IAGvBM,EAAM,WAAH,OACdpB,eAAA,WAASR,UAAU,MAAKI,SAAA,CACtBL,cAAA,MAAIC,UAAU,aAAYI,SAAC,yBAE3BL,cAACmB,EAAQ,CACPC,MAAOA,MAED,EC1BZU,IAASC,OACP/B,cAAC6B,EAAG,IACJG,SAASC,eAAe,Q","file":"static/js/main.d9b08f8a.chunk.js","sourcesContent":["import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import './CommentInfo.scss';\n\nexport const CommentInfo = ({ comment }) => (\n\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{comment.name}</strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${comment.email}`}\n      >\n        {comment.email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      <em>{comment.body}</em>\n    </div>\n  </div>\n);\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo/CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <ul className=\"CommentList\">\n    <li>\n      {comments.map(comment => (\n        <CommentInfo key={comment.id} comment={comment} />\n      ))}\n    </li>\n  </ul>\n\n);\n","import { UserInfo } from '../UserInfo/UserInfo';\nimport { CommentList } from '../CommentList';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ todo }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">{todo.title}</h3>\n\n      <span>\n        {' Posted by  '}\n\n        <UserInfo user={todo.user} />\n      </span>\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {todo.body}\n    </p>\n\n    <hr />\n\n    <b data-cy=\"NoCommentsMessage\">\n\n      {todo.comments.length > 0 ? (\n        <CommentList comments={todo.comments} />\n      ) : (\n        <p>No commnets yet</p>\n      )}\n    </b>\n  </div>\n);\n","import { PostInfo } from '../PostInfo/PostInfo';\n\nexport const PostList = ({ todos }) => (\n  <div className=\"PostList\">\n    {todos.map(todo => (\n      <PostInfo key={todo.id} todo={todo} />\n    ))}\n  </div>\n);\n","import './App.scss';\nimport { PostList } from './components/PostList/PostList';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n\nfunction getCommentsById(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId)\n      || [];\n}\n\nconst todos = postsFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n  comments: getCommentsById(todo.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList\n      todos={todos}\n    />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}