{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","_ref","user","_jsxs","className","href","email","children","name","username","CommentList","com","_Fragment","_jsx","concat","body","PostInfo","todo","title","comment","map","length","PostList","todos","id","postsFromServer","_objectSpread","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"6z8IAEaA,EAAW,SAAHC,GAAA,IAAMC,EAAID,EAAJC,KAAI,OAC7BC,eAAA,KAAGC,UAAU,WAAWC,KAAMH,EAAKI,MAAMC,SAAA,CACtCL,EAAKM,KACLN,EAAKO,WACJ,ECJOC,G,MAAc,SAAHT,GAAA,IAAMU,EAAGV,EAAHU,IAAG,OAC/BR,eAAAS,WAAA,CAAAL,SAAA,CACEJ,eAAA,KAAAI,SAAA,CACGI,EAAIH,KACLK,cAAAD,WAAA,CAAAL,SAAE,OAAK,KAEPM,cAAAD,WAAA,CAAAL,SAAE,OACFM,cAAA,KAAGR,KAAI,UAAAS,OAAYH,EAAIL,OAAQC,SAAEI,EAAIL,WAEvCO,cAAA,SACAA,cAAA,KAAAN,SAAII,EAAII,SACP,GCTQC,G,MAAW,SAAHf,GAAA,IAAMgB,EAAIhB,EAAJgB,KAAI,OAC7BJ,cAAAD,WAAA,CAAAL,SACEJ,eAAA,OAAKC,UAAU,WAAUG,SAAA,CACvBJ,eAAA,OAAKC,UAAU,mBAAkBG,SAAA,CAC/BM,cAAA,MAAIT,UAAU,kBAAiBG,SAAEU,EAAKC,QAEtCf,eAAA,KAAAI,SAAA,CACG,eAEDM,cAACb,EAAQ,CAACE,KAAMe,EAAKf,aAIzBW,cAAA,KAAGT,UAAU,iBAAgBG,SAC1BU,EAAKF,OAGRF,cAAA,SAEAA,cAAA,KAAG,UAAQ,oBAAmBN,SAC3BU,EAAKE,QAAQC,KAAI,SAAAT,GAAG,OACJ,IAAfA,EAAIU,OACFR,cAAA,KAAAN,SAAG,qBAEHM,cAACH,EAAW,CAACC,IAAKA,GACnB,UAIN,GC/BQW,EAAW,SAAHrB,GAAA,IAAMsB,EAAKtB,EAALsB,MAAK,OAC9BV,cAAA,OAAKT,UAAU,WAAUG,SACtBgB,EAAMH,KAAI,SAAAH,GAAI,OACbJ,cAACG,EAAQ,CAAeC,KAAMA,GAAfA,EAAKO,GAAkB,KAEpC,E,qBCUD,IAAMD,EAAQE,EAAgBL,KAAI,SAAAH,GAAI,OAAAS,wBAAA,GACxCT,GAAI,IACPf,MAZmByB,EAYDV,EAAKU,OAXhBC,EAAgBC,MAAK,SAAA3B,GAAI,OAAIA,EAAKsB,KAAOG,CAAM,KAC/C,MAWPR,SARuBW,EAQEb,EAAKO,GAPvBO,EAAmBC,QAAO,SAAAb,GAAO,OAAIA,EAAQW,SAAWA,CAAM,KAC9D,MAFT,IAAyBA,EALJH,CAac,IAGtBM,EAAM,WAAH,OACd9B,eAAA,WAASC,UAAU,MAAKG,SAAA,CACtBM,cAAA,MAAIT,UAAU,aAAYG,SAAC,yBAE3BM,cAACS,EAAQ,CACPC,MAAOA,MAED,EC1BZW,IAASC,OACPtB,cAACoB,EAAG,IACJG,SAASC,eAAe,Q","file":"static/js/main.3c9910dd.chunk.js","sourcesContent":["import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <a className=\"UserInfo\" href={user.email}>\n    {user.name}\n    {user.username}\n  </a>\n);\n","import './CommentList.scss';\n\nexport const CommentList = ({ com }) => (\n  <>\n    <p>\n      {com.name}\n      <>  </>\n      by\n      <>  </>\n      <a href={`mailto:${com.email}`}>{com.email}</a>\n    </p>\n    <br />\n    <p>{com.body}</p>\n  </>\n\n);\n","import { UserInfo } from '../UserInfo/UserInfo';\nimport { CommentList } from '../CommentList';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ todo }) => (\n  <>\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">{todo.title}</h3>\n\n        <p>\n          {' Posted by  '}\n\n          <UserInfo user={todo.user} />\n        </p>\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {todo.body}\n      </p>\n\n      <hr />\n\n      <b data-cy=\"NoCommentsMessage\">\n        {todo.comment.map(com => (\n          com.length === 0 ? (\n            <p>Not comments yet</p>\n          ) : (\n            <CommentList com={com} />\n          )\n        ))}\n      </b>\n    </div>\n  </>\n);\n","import { PostInfo } from '../PostInfo/PostInfo';\n\nexport const PostList = ({ todos }) => (\n  <div className=\"PostList\">\n    {todos.map(todo => (\n      <PostInfo key={todo.id} todo={todo} />\n    ))}\n  </div>\n);\n","import './App.scss';\nimport { PostList } from './components/PostList/PostList';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n\nfunction getCommentsById(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId)\n      || [];\n}\n\nexport const todos = postsFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n  comment: getCommentsById(todo.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList\n      todos={todos}\n    />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}